name: Build ImmortalWrt for NanoPi R4S

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3-distutils rsync unzip zlib1g-dev file wget zstd

      - name: Download and extract Image Builder
        run: |
          wget https://downloads.immortalwrt.org/releases/24.10.1/targets/rockchip/armv8/immortalwrt-imagebuilder-24.10.1-rockchip-armv8.Linux-x86_64.tar.zst
          unzstd immortalwrt-imagebuilder-24.10.1-rockchip-armv8.Linux-x86_64.tar.zst
          tar -xf immortalwrt-imagebuilder-24.10.1-rockchip-armv8.Linux-x86_64.tar
          mv immortalwrt-imagebuilder-24.10.1-rockchip-armv8.Linux-x86_64 imagebuilder

      - name: Configure and build firmware
        run: |
          cd imagebuilder
          # Add required packages
          make image PROFILE=friendlyarm_nanopi-r4s \
            PACKAGES="luci-app-ssr-plus luci-app-homebox"

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp imagebuilder/bin/targets/rockchip/armv8/*.img.gz artifacts/
          cp imagebuilder/bin/targets/rockchip/armv8/*.tar.gz artifacts/

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.date }}
          release_name: Release ${{ env.date }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/
          asset_name: immortalwrt-nanopi-r4s-${{ env.date }}.tar.gz
          asset_content_type: application/gzip
