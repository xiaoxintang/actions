name: Build ImmortalWrt Firmware

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点运行

env:
  IMAGEBUILDER_URL: "https://downloads.immortalwrt.org/releases/23.05.3/targets/rockchip/armv8/immortalwrt-imagebuilder-23.05.3-rockchip-armv8.Linux-x86_64.tar.xz"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download ImageBuilder
        run: |
          echo "Downloading ImageBuilder from $IMAGEBUILDER_URL"
          wget "$IMAGEBUILDER_URL"
          if [ $? -ne 0 ]; then
            echo "Failed to download imagebuilder"
            exit 1
          fi
          IMAGEBUILDER_FILE=$(basename "$IMAGEBUILDER_URL")
          tar xf "$IMAGEBUILDER_FILE"
          if [ $? -ne 0 ]; then
            echo "Failed to extract imagebuilder"
            exit 1
          fi
          cd "$(basename "$IMAGEBUILDER_FILE" .tar.xz)"

      - name: Add custom repositories
        run: |
          echo "src-git ssrplus https://github.com/fw876/helloworld.git" >> repositories.conf
          echo "src-git homebox https://github.com/immortalwrt/luci.git" >> repositories.conf

      - name: Build firmware
        run: |
          make image PROFILE="friendlyarm_nanopi-r4s" \
            PACKAGES="luci-app-ssr-plus luci-app-homebox" \
            FILES="files/" \
            EXTRA_IMAGE_NAME="$(date +'%Y%m%d')"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            */bin/targets/rockchip/armv8/*.img.gz
            */bin/targets/rockchip/armv8/*.img

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v$(date +'%Y%m%d')
          release_name: Release $(date +'%Y-%m-%d')
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./*/bin/targets/rockchip/armv8/*.img.gz
          asset_name: immortalwrt-r4s-$(date +'%Y%m%d').img.gz
          asset_content_type: application/octet-stream 
